<template>
    <view>
        <view class="banner"  v-if="false" auto-focus>
            <image class="banner-img" :src="banner.image_url||'https://www.python1314.com/wp-content/uploads/2019/08/album.jpg' "></image>
        </view>
		<view class="article-title">
			<text class="title">{{banner.title}}</text>
		</view>
        <view class="article-meta">
            <text class="article-author">{{banner.source}}</text>
            <text class="article-text"></text>
            <text class="article-time">{{banner.datetime}}</text>
        </view>
        <view class="article-content">
            <rich-text :nodes="content" style="font-size: 30rpx;"></rich-text>
			<button class="article-button-link" @click="read(banner.link&&banner.link.href)" type="default">{{banner.link&&banner.link.text}}</button>
		</view>
        <view class="comment-wrap"></view>
    </view>
</template>

<script>
    import htmlParser from '@/common/html-parser'

    const FAIL_CONTENT = '<p>获取信息失败</p>';

    function parseImgs(nodes) {
        nodes.forEach(node => {
            if (
                node.name === 'img' &&
                node.attrs &&
                node.attrs['data-img-size-val']
            ) {
                const sizes = node.attrs['data-img-size-val'].split(',')
                const width = uni.upx2px(720*0.9)
                const height = parseInt(width * (sizes[1] / sizes[0]))
                node.attrs.style = `width:${width};height:${height};`
            }
            if (Array.isArray(node.children)) {
                parseImgs(node.children)
            }
        })
        return nodes
    }

    export default {
        data() {
            return {
                banner: {},
                content: []
            }
        },
        onShareAppMessage() {
            return {
                title: this.banner.title,
                path: '/pages/detail/detail?query=' + JSON.stringify(this.banner)
            }
        },
        onLoad(event) {
            // 目前在某些平台参数会被主动 decode，暂时这样处理。
            try {
                this.banner = JSON.parse(decodeURIComponent(event.query));
            } catch (error) {
                this.banner = JSON.parse(event.query);
            }

            uni.setNavigationBarTitle({
                title: this.banner.title
            });
            this.getDetail();
        },
        methods: {
            getDetail() {
                uni.request({
                    url: 'https://www.python1314.com/wp-json/wp/v2/posts/' + this.banner.newsid,
                    success: (result) => {
                        let content = FAIL_CONTENT
                        if (result.statusCode == 200) {
                            content = result.data.content.rendered
                        }
                        const nodes = htmlParser(content);
                        // #ifdef APP-PLUS-NVUE
                        parseImgs(nodes)
                        // #endif
						this.banner['link'] = this.parseLink(nodes);
						this.banner['link'] = this.banner['link'] && this.banner['link'][0];
						
                        this.content = nodes
                    }
                });
            },
			parseLink(nodes) {
				let links = [];
				for (let i = 0; i < nodes.length; i++) {
					if (nodes[i]['name'] == 'a') {
						let link = {
							href: nodes[i]['attrs']['href'],
							text: nodes[i]['children'][0]['text']
						};
						links.push(link);
						nodes.splice(i);
					} else if (nodes[i]['children'] && nodes[i]['children'].length) {
						let cnodes = nodes[i]['children'];
						return links.concat(this.parseLink(cnodes));
					}
				}
				return links;
			},
			read(url) {
				uni.navigateTo({
				    url: '/pages/webview/webview?url=' + encodeURIComponent(url)
				});
			}
        }
    }
</script>

<style>
	/* #ifndef APP-PLUS */
	page {
		min-height: 100%;
	}
	/* #endif */

    .banner {
        height: 360upx;
        position: relative;
        background-color: #ccc;
        flex-direction: row;
        overflow: hidden;
    }

    .banner-img {
        flex: 1;
    }

    .banner-title {
        position: absolute;
        left: 30upx;
        bottom: 30upx;
        font-size: 32upx;
        font-weight: 400;
        line-height: 42upx;
        color: #ffffff;
        overflow: hidden;
        z-index: 11;
    }
    .article-title {
        padding: 20upx;	
	}
    .article-meta {
        padding: 20upx;
		padding-top: 0;
        flex-direction: row;
        justify-content: flex-start;
		align-items: center;
        color: gray;
    }

    .article-text {
        font-size: 28upx;
    }

    .article-author {
        font-size: 28upx;
    }

    .article-time {
        font-size: 30upx;
    }

    .article-content {
        font-size: 30upx;
        padding: 0 20upx;
		line-height: 60upx;
        margin-bottom: 30upx;
        overflow: hidden;
    }
	
	.article-button-link {
		height: 80upx;
		line-height: 80upx;
		font-size: 30upx;
	}
</style>
